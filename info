-------------- information ------------

Definition: A socket is one endpoint of a two-way communication link between two programs running on the network.
A socket is bound to a port number so that the TCP layer can identify the application that data is destined to be sent to.

<!-- in you config file you make it if doesn't found newline in the end will eit with error and in there's more than server they must not be separt by newline -->


/*you have a sev*/
playlist music https://www.youtube.com/watch?v=w6Nvi8UOvxE



<!-- Suppose you have a computer in your home network with the IPv4 address 192.168.0.2, 
and you want to access a website with the IPv4 address 203.0.113.5 (just an example address). When you enter the website's domain name into your browser, 
the domain name is translated into the corresponding IP address using DNS (Domain Name System). In this case, let's assume the translation gives you the IP address 203.0.113.5.

Now, when you send a request to access the website, 
your computer's data packets are tagged with your source IP address (192.168.0.2) and are routed through the internet to the destination IP address (203.0.113.5). 
The routers on the internet use these IP addresses to correctly forward the packets along the path to reach the destination server.--> 


htons
<!-- 

Here's how the binary representation of 513 would be stored in memory for both little-endian and big-endian systems:

Little-endian:

Byte 1 (LSB): 00000001
Byte 2 (MSB): 00000010
Memory representation: 00000001 00000010
Big-endian:

Byte 1 (MSB): 00000010
Byte 2 (LSB): 00000001
Memory representation: 00000010 00000001 


The htons function is designed to convert a 16-bit (2-byte) integer from host byte order to network byte order. If you pass the value 513 to htons, it will perform the necessary byte order conversion.

The binary representation of 513 is 00000010 00000001. However, the actual result of htons(513) will depend on the endianness of your system.

If your system is little-endian, htons(513) would convert the value to big-endian (network byte order), which is 00000001 00000010.

If your system is big-endian, where the byte order is already in network byte order, htons(513) would likely return the same value 513 without any change.

In summary, the result of htons(513) will be 00000001 00000010 if your system is little-endian, and it might be 513 (unchanged) if your system is big-endian. The purpose of htons is to ensure that the value is in the correct byte order for network communication.

-->